{
  "name": "Jet",
  "tagline": " An HTTP/HTTPS proxy integrated with socks.",
  "body": "# Jet\r\nAn HTTP/HTTPS proxy integrated with socks.\r\n\r\n> The name \"Jet\" is inspired by Jet Black from Cowboy Bepop.\r\n\r\n```\r\n                               ┌───────────────────────────────────────┐\r\n                               │                                       │\r\n                               │                                       ▼\r\n                               │                                 ┌───────────┐\r\n┌──────────────────┐     ┌───────────┐                           │           │\r\n│ User Application │────▶│    Jet    │                           │ Internet  │\r\n└──────────────────┘     └───────────┘                           │           │\r\n                               │                                 └───────────┘\r\n                               │          ┌──────────────┐              ▲\r\n                               │          │ Socks Proxy  │              │\r\n                               └─────────▶│    (like     │──────────────┘\r\n                                          │ shadowsocks) │\r\n                                          └──────────────┘\r\n```\r\n\r\n## Installation\r\n\r\n\tnpm install -g m31271n/jet\r\n\r\n## Jet need a socks5 proxy\r\nJet need a socks5 proxy that run at `127.0.0.1:1080`. Shadowsocks is a good choice.\r\n\r\n## Run Jet\r\n\r\n\tjet run // run jet on 127.0.0.1:9527\r\n\tjet run -h 127.0.0.1 -p 9600 // run jet on 127.0.0.1:9600\r\n\r\n## Edit rule\r\n\r\n\tjet edit-rule tunnel // specify which request to be sent via tunnel\r\n\tjet edit-rule block // specify which request to be blocked (in development)\r\n\r\n## Backup rule\r\n\r\n\tjet backup-rule <path> // backup all the rules to a place (in development)\r\n\r\n## Configure OS to use this\r\n### For GUI\r\nI think you know how to set this.\r\n\r\n### For CLI\r\nSuppose Jet is running at `127.0.0.1:9527`.\r\n\r\n\tCHANNEL=\"http://127.0.0.1:9527\"\r\n\tNO_CHANNEL=\"localhost,127.0.0.1\"\r\n\r\n\tPROXY_ENV=\"http_proxy ftp_proxy https_proxy all_proxy HTTP_PROXY HTTPS_PROXY FTP_PROXY ALL_PROXY\"\r\n\tNO_PROXY_ENV=\"no_proxy NO_PROXY\"\r\n\tfor envar in $PROXY_ENV; do\r\n\t\texport $envar=$CHANNEL\r\n\tdone\r\n\r\n\tfor envar in $NO_PROXY_ENV; do\r\n\t\texport $envar=$NO_CHANNEL\r\n\tdone\r\n\r\n\tunset CHANNEL\r\n\tunset NO_CHANNEL\r\n\tunset PROXY_ENV\r\n\tunset NO_PROXY_ENV\r\n\r\nAdd above script to your shell init file, like `~/.bashrc` or `~/.zshrc`. Then `source` it.\r\n\r\n## Test the effects\r\n\r\n    curl --proxy localhost:9527 https://www.google.com/\r\n\r\n## LICENSE\r\nGPL-3.0",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}